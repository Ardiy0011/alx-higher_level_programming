
Importing class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.area(5, 5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 3 were given

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)


    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg.integer_validator("my_int", 12)
    <BLANKLINE>

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("width", 89)
    <BLANKLINE>


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "John")
    [TypeError] name must be an integer


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", 0)
    [ValueError] age must be greater than 0


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("distance", -4)
    [ValueError] distance must be greater than 0


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", 5, 4)
    [TypeError] integer_validator() takes 3 positional arguments but 4 were given

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator(5, 0)
    [ValueError] 5 must be greater than 0


:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator(4, 7)
    [TypeError] place a string instead of 4

:::::::::::::::::::::::::::::::::::::::::::::::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    [TypeError] integer_validator() missing 2 required positional arguments: 'name' and 'value'
